local PLUGIN = CAdmin.Plugins.Create ("Censorship")
PLUGIN:SetAuthor ("!cake")
PLUGIN:SetDescription ("Provides commands every dictator needs.")

function PLUGIN:Initialize ()
	self.GimpMessages = {}
	
	CAdmin.Chat.AddSayHook ("CAdmin.Censorship.Mute", function (ply, message, teamChat)
		if CAdmin.Players.GetSessionData (ply, "Muted") then
			return true
		end
	end)

	local command = CAdmin.Commands.Create ("addgimpmessage", "Censorship", "Add Gimp Message", true)
		:SetConsoleCommand ("addgimpmessage")
	command:AddArgument ("String")
	command:SetExecute (function (ply, message)
		self.GimpMessages [#self.GimpMessages + 1] = message
	end)

	command = CAdmin.Commands.Create ("gimp", "Censorship", "Gimp", true)
		:SetConsoleCommand ("gimp")
		:SetLogString ("%Player% gimped %target%.")
		:SetReverseConsoleCommand ("ungimp")
		:SetReverseDisplayName ("Ungimp")
		:SetReverseLogString ("%Player% ungimped %target%.")
	command:AddArgument ("Player")
	command:SetExecute (function (ply, targply, gimp)
		CAdmin.Players.SetSessionData (ply, "Gimped", gimp, true)
	end)
	command:SetGetToggleState (function (ply)
		return CAdmin.Players.GetSessionData (ply, "Gimped")
	end)

	command = CAdmin.Commands.Create ("mute", "Censorship", "Mute", true)
		:SetConsoleCommand ("mute")
		:SetLogString ("%Player% muted %target%.")
		:SetReverseConsoleCommand ("unmute")
		:SetReverseDisplayName ("Unmute")
		:SetReverseLogString ("%Player% unmuted %target%.")
	command:AddArgument ("Player")
		:SetPromptText ("Select whom you want to mute:")
		:SetReversePromptText ("Select whom you want to unmute:")
	command:SetExecute (function (ply, targply, mute)
		CAdmin.Players.SetSessionData (ply, "Muted", mute, true)
	end)
	command:SetGetToggleState (function (ply)
		return CAdmin.Players.GetSessionData (ply, "Muted")
	end)

	command = CAdmin.Commands.Create ("mute_voice", "Censorship", "Mute Voice", true)
		:SetConsoleCommand ("gag")
		:SetLogString ("%Player% gagged %target%.")
		:SetReverseConsoleCommand ("ungag")
		:SetReverseDisplayName ("Unmute Voice")
		:SetReverseLogString ("%Player% ungagged %target%.")
	command:AddArgument ("Player")
		:SetPromptText ("Select whom you want to gag:")
		:SetReversePromptText ("Select whom you want to ungag:")
	command:SetExecute (function (ply, targply, gag)
		CAdmin.Players.SetSessionData (ply, "Gagged", gag, true)
	end)
	command:SetGetToggleState (function (ply)
		return CAdmin.Players.GetSessionData (ply, "Gagged")
	end)

	command = CAdmin.Commands.Create ("pm", "Censorship", "Private Message")
		:SetConsoleCommand ("pm")
	command:AddArgument ("Player", "Player")
		:SetPromptText ("Select to whom you want to send a message:")
	command:AddArgument ("String", "Message")
		:SetPromptText ("Enter the message you want to send:")
	command:SetExecute (function (ply, targply, message)
		ply:PrintMessage (HUD_PRINTTALK, "(Private) To " .. ply:Name () .. ": " .. message)
		targply:PrintMessage (HUD_PRINTTALK, "(Private) From " .. targply:Name () .. ": " .. message)
	end)
end